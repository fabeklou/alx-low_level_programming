# Varibles
#====================================================================
# The compiler to be used
CC=gcc
# The list of source files
SRC=main.c school.c
# Generates one object file for each source file with the same prefix
OBJ=$(SRC:.c=.o)
#  The name of the final executable
NAME=school
# The program/command to delete files
RM=rm -f
# The compiler flags
CFLAGS=-Wall -Werror -Wextra -pedantic

# Main rule
all: $(NAME)

# the $(NAME) should always be executed to build the executable
# `clean` `oclean` `fclean` and `re` should never fail
# .PHONY: $(NAME) clean oclean re

# Makes the main object depends on the header file
# main.o: m.h

# Generic rule, produices the object files
# %.o: %.c
#	$(CC) $(CFLAGS)	-c -o $@ $<

# Rule used to build the executable
$(NAME): $(OBJ)
	$(CC) $(OBJ) -o $(NAME)

# This rule deletes all Emacs/Vim temp files along with the executable
clean:
	$(RM) *~ $(NAME)

# This rule deletes the object files
oclean:
	$(RM) $(OBJ)

# This rule combines `clean` and `oclean` rules
fclean: clean oclean

# This rule forces recompilation of all source files
re: oclean all
